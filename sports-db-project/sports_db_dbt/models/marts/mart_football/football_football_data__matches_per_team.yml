models:
  - name: football_football_data__matches_per_team
    config:
      contract:
        enforced: true
    columns:
      - name: team_match_id
        description: PK, surrogate key that uniquely identifies a combination of match and team. 
        data_type: VARCHAR
        data_tests:
          - unique
          - not_null
      - name: match_id
        description: FK, ID of the match (common to both team that played it)
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__matches')
              field: match_id
      - name: team_id
        description: FK, ID of the team
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__teams')
              field: team_id
      - name: team_name
        description: Name of the team
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__teams')
              field: team_name
      - name: competition_id
        description: FK, ID of the team
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__competitions')
              field: competition_id
      - name: competition_name
        description: Name of the competition
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__competitions')
              field: competition_name
      - name: team_playing_location
        description: Is the match home or away for the team?
        data_type: VARCHAR
        data_tests:
          - not_null
          - accepted_values:
              values: ['home', 'away']
          - is_number_of_x_and_y_equal:
            # There should be the same number of home and away matches in this table.
              x_value: 'home' 
              y_value: 'away'
      - name: match_at
        description: When the match is played
        data_type: TIMESTAMP
        date_tests:
          # Other tests are already set up in stg_football_data__matches
          - not_null
      - name: match_month
        description: Month when the match is played
        data_type: TIMESTAMP
        date_tests:
          # Other tests are already set up in stg_football_data__matches
          - not_null
      - name: team_result
        description: Result of the team for this match (either win, loss or draw).
        data_type: VARCHAR
        data_tests:
          - accepted_values:
              values: ['win', 'draw', 'loss']
          - not_null:
              where: match_status = 'finished'
      - name: match_status
        description: Status of the match
        data_type: VARCHAR
        data_tests: 
          - not_null
          - accepted_values:
              values: ['timed', 'finished', 'paused','in play']
      - name: opponent_team_id
        description: ID of the opponent team
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__teams')
              field: team_id

    tests:
      - dbt_utils.expression_is_true:
          expression: match_status = 'finished'
          where: team_result IS NOT NULL
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - match_id
            - opponent_team_id
