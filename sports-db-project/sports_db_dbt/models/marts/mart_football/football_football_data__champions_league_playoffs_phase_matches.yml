models:
  - name: football_football_data__champions_league_playoffs_phase
    config:
      contract:
        enforced: true
    columns:
      - name: match_id
        description: ID of the match as found in the source (football-data API)
        data_type: VARCHAR
        data_tests: 
          - not_null
          - unique
      
      - name: match_at
        description: When the match starts
        data_type: TIMESTAMP
        data_tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: '< current_timestamp'
              where: status = 'finished'
      
      - name: status
        description: Status of the game at the moment of extraction
        data_type: VARCHAR
        data_tests: 
          - not_null
          - accepted_values:
              values: ['timed', 'awarded', 'scheduled', 'postponed', 'finished', 'paused', 'in play']
      
      - name: matchday_number
        description: Matchday of the match. In the Champions League playoffs phase, can never be greater than 2 (since, they are 2-legged matchups)
        data_type: INTEGER
        data_tests:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 2
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 0
              where: match_stage = 'final'
        
      - name: match_stage
        description: Stage of the match in the playoffs phase
        data_type: VARCHAR
        data_tests:
          - not_null
          - accepted_values:
              values: ['playoffs', 'last 16', 'quarter finals', 'semi finals', 'final']

      - name: home_team_id
        description: ID of the home team, as found in the source (football-data API)
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__teams')
              field: team_id

      - name: home_team_name
        description: Name of the home team
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__teams')
              field: team_name

      - name: away_team_id
        description: ID of the away team, as found in the source (football-data API)
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__teams')
              field: team_id

      - name: away_team_name
        description: Name of the away team
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__teams')
              field: team_name

      - name: referees_ids
        description: IDs of the referees, as found in the source (football-data API)
        data_type: VARCHAR[]
        # For now, we don't test referees because we will not really need them

      - name: winner
        description: Who won the match?
        data_type: VARCHAR
        data_tests:
          - not_null:
              where: status IN ('finished', 'awarded')
          - accepted_values:
              values: ['home', 'away', 'draw']
      
      - name: duration_type
        description: Type of end of the match. Note that "Lately there are some issues with extratime/penalty score sync to the free tier", according to Daniel, the man who built the API (latest update on 2025/04/08). These issues imply that some matches that finished in extra time might have a duration_type = "regular"  
        data_type: VARCHAR
        data_tests:
          - not_null
          - accepted_values:
              values: ['regular', 'extra time', 'penalty shootout']

      - name: full_time_home_score
        description: Score of the home team at the end of the match
        data_type: INTEGER
        data_test:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 20 # Defined according to my subjective common senses
      
      - name: full_time_away_score
        description: Score of the away team at the end of the match
        data_type: INTEGER
        data_test:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 20
      
      - name: half_time_home_score
        description: Score of the home team at the end of the match
        data_type: INTEGER
        data_test:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 10 
      
      - name: half_time_away_score
        description: Score of the away team at the end of the match
        data_type: INTEGER
        data_test:
          - not_null
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 10
      
      - name: area_id
        description: ID of the area in which the match takes place
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__areas')
              field: area_id
      
      - name: competition_id
        description: ID of the competition of the match
        data_type: VARCHAR
        data_tests:
          - not_null
          - accepted_values:
              values: ['2001']
      
      - name: competition_name
        description: Name of the competition
        data_type: VARCHAR
        data_tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "= 'UEFA Champions League'"

      - name: season_id
        description: ID of the season
        data_type: VARCHAR
        data_tests:
          - not_null
          - relationships:
              to: ref('stg_football_data__seasons')
              field: season_id
      
      - name: last_updated_at
        description: Last time the matches were extracted from the football-data API
        data_type: TIMESTAMP
        data_tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: '< current_date'

      - name: stage_order 
        description: Logical order of the stages (the closer to 0, the further in the tournament)
        data_type: INTEGER
